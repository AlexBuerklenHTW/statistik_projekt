<<<<<<< HEAD
=======
plot_6 <- ggplot(data_6_clean,aes(x=age, y = sibsp, color = factor(survived) )) +
geom_point(shape = 19) +
scale_x_continuous(breaks = seq(0, max(data_6_clean$age), by = 10)) +
scale_color_manual(values = c("red", "green"), labels = c("Nicht überlebt", "Überlebt")) +
labs(x = "Alter", y = "geschwister/ehepaare", title = "Egeschwister/ehepaare vs. Überlebenschance (Überlebensstatus)") +
theme_dark()
print(plot_6)
data_6 <- data.frame(sibsp,survived,age)
data_6_clean <- na.omit(data_6)
data_6
plot_6 <- ggplot(data_6_clean,aes(x=age, y = sibsp, color = factor(survived) )) +
geom_point(shape = 19) +
scale_x_continuous(breaks = seq(0, max(data_6_clean$age), by = 10)) +
scale_color_manual(values = c("red", "green"), labels = c("Nicht überlebt", "Überlebt")) +
labs(x = "Alter", y = "geschwister/ehepaare", title = "Egeschwister/ehepaare vs. Überlebenschance (Überlebensstatus)") +
theme_dark()
print(plot_6)
data_3 <- data.frame(parch,survived,age)
data_3 <- data.frame(parch,survived,age)
data_3_clean <- na.omit(data_3)
data_3
plot_3 <- ggplot(data_3_clean,aes(x=age, y = parch, color = factor(survived) )) +
geom_point(shape = 19) +
scale_x_continuous(breaks = seq(0, max(data_3_clean$age), by = 10)) +
scale_color_manual(values = c("red", "green"), labels = c("Nicht überlebt", "Überlebt")) +
labs(x = "Alter", y = "Eltern", title = "Eltern und Kinder vs. Überlebenschance (Überlebensstatus)") +
theme_dark()
library(ggplot2)
data_3 <- data.frame(parch,survived,age)
data_3_clean <- na.omit(data_3)
data_3
plot_3 <- ggplot(data_3_clean,aes(x=age, y = parch, color = factor(survived) )) +
geom_point(shape = 19) +
scale_x_continuous(breaks = seq(0, max(data_3_clean$age), by = 10)) +
scale_color_manual(values = c("red", "green"), labels = c("Nicht überlebt", "Überlebt")) +
labs(x = "Alter", y = "Eltern", title = "Eltern und Kinder vs. Überlebenschance (Überlebensstatus)") +
theme_dark()
print(plot_3)
data_6 <- data.frame(sibsp,survived,age)
data_6_clean <- na.omit(data_6)
data_6
plot_6 <- ggplot(data_6_clean,aes(x=age, y = sibsp, color = factor(survived) )) +
geom_point(shape = 19) +
scale_x_continuous(breaks = seq(0, max(data_6_clean$age), by = 10)) +
scale_color_manual(values = c("red", "green"), labels = c("Nicht überlebt", "Überlebt")) +
labs(x = "Alter", y = "geschwister/ehepaare", title = "Egeschwister/ehepaare vs. Überlebenschance (Überlebensstatus)") +
theme_dark()
print(plot_6)
plot_6
plot_5 <- ggplot(data_5, aes(x = survived, fill = sex)) +
geom_bar() +
labs(x = "Überlebt", y = "Anzahl der Personen") +
scale_fill_manual(values = c("male" = "red", "female" = "green")) +
theme_minimal()
library(ggplot2)
data_5 <- data.frame(sex,survived)
plot_5 <- ggplot(data_5, aes(x = survived, fill = sex)) +
geom_bar() +
labs(x = "Überlebt", y = "Anzahl der Personen") +
scale_fill_manual(values = c("male" = "red", "female" = "green")) +
theme_minimal()
plot_5
plot_4
plot_3
plot_2
data_2 <- data.frame(fare, survived, age)
data_2_clean <- na.omit(data_2)
plot_2 <- ggplot(data_2_clean, aes(x = age, y = fare, color = factor(survived))) +
geom_point(shape = 19) +
scale_x_continuous(breaks = seq(0, max(data_2_clean$age), by = 10)) +
scale_color_manual(values = c("red", "green"), labels = c("Nicht überlebt", "Überlebt")) +
labs(x = "Alter", y = "Ticketkosten", title = "Alter vs. Ticketkosten (Überlebensstatus)") +
theme_dark()
print(plot_2)
plot_1
plot_2
plot_3
plot_4
plot_5
plot_6
plot_5
plot_6
# Annahme: Du hast bereits einen data.frame namens "df" mit den Spalten "parch" und "Überlebensstatus"
# Überlebensraten berechnen
survival_rates <- aggregate(Überlebensstatus ~ parch, data = df, FUN = mean)
plot_1
plot_3
library(ggplot2)
# Annahme: Du hast bereits einen data.frame namens "df" mit den Spalten "parch" und "Überlebensstatus"
# Überlebensraten berechnen
survival_rates <- aggregate(Überlebensstatus ~ parch, data = data_3_clean, FUN = mean)
library(ggplot2)
# Annahme: Du hast bereits einen data.frame namens "df" mit den Spalten "parch" und "Überlebensstatus"
# Überlebensraten berechnen
survival_rates <- aggregate(data_3_clean ~ parch, data = data_3_clean, FUN = mean)
library(ggplot2)
# Annahme: Du hast bereits einen data.frame namens "df" mit den Spalten "parch" und "Überlebensstatus"
# Überlebensraten berechnen
survival_rates <- aggregate(data_3_clean$parch ~ parch, data = data_3_clean, FUN = mean)
# grouped bar plot erstellen
ggplot(survival_rates, aes(x = factor(parch), y = Überlebensstatus)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Anzahl der Eltern/Kinder an Bord", y = "Überlebensrate", title = "Korrelation zwischen Eltern/Kinder und Überlebensstatus")
library(ggplot2)
# Annahme: Du hast bereits einen data.frame namens "df" mit den Spalten "parch" und "Überlebensstatus"
# Überlebensraten berechnen
survival_rates <- aggregate(data_3_clean$parch ~ parch, data = data_3_clean, FUN = mean)
# grouped bar plot erstellen
ggplot(survival_rates, aes(x = factor(parch), y = data_3_clean$survived)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Anzahl der Eltern/Kinder an Bord", y = "Überlebensrate", title = "Korrelation zwischen Eltern/Kinder und Überlebensstatus")
library(ggplot2)
# Annahme: Du hast bereits einen data.frame namens "data_3_clean" mit den Spalten "parch" und "survived"
# Überlebensraten berechnen
survival_rates <- aggregate(survived ~ parch, data = data_3_clean, FUN = mean)
# grouped bar plot erstellen
ggplot(survival_rates, aes(x = factor(parch), y = survived)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Anzahl der Eltern/Kinder an Bord", y = "Überlebensrate", title = "Korrelation zwischen Eltern/Kinder und Überlebensstatus")
plot_3
#Vorschlag für dritten Plot
# Überlebensraten berechnen
#survival_rates <- aggregate(survived ~ parch, data = data_3_clean, FUN = mean)
# grouped bar plot erstellen
#ggplot(survival_rates, aes(x = factor(parch), y = survived)) +
#  geom_bar(stat = "identity", fill = "steelblue") +
#  labs(x = "Anzahl der Eltern/Kinder an Bord", y = "Überlebensrate", title = "Korrelation zwischen Eltern/Kinder und Überlebensstatus")
# Überlebensraten berechnen
survival_rates <- aggregate(survived ~ parch, data = data_3_clean, FUN = mean)
grouped bar plot erstellen
# Überlebensraten berechnen
survival_rates <- aggregate(survived ~ parch, data = data_3_clean, FUN = mean)
ggplot(survival_rates, aes(x = factor(parch), y = survived)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Anzahl der Eltern/Kinder an Bord", y = "Überlebensrate", title = "Korrelation zwischen Eltern/Kinder und Überlebensstatus")
library(ggplot2)
# Überlebensraten berechnen
survival_rates <- aggregate(survived ~ parch, data = data_3_clean, FUN = mean)
ggplot(survival_rates, aes(x = factor(parch), y = survived)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Anzahl der Eltern/Kinder an Bord", y = "Überlebensrate", title = "Korrelation zwischen Eltern/Kinder und Überlebensstatus")
plot_3
# Überlebensraten berechnen
survival_rates <- aggregate(survived ~ parch, data = data_3_clean, FUN = mean)
ggplot(survival_rates, aes(x = factor(parch), y = survived)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Anzahl der Eltern/Kinder an Bord", y = "Überlebensrate", title = "Korrelation zwischen Eltern/Kinder und Überlebensstatus")
plot_4
# Überlebensraten berechnen
survival_rates <- aggregate(survived ~ parch, data = data_3_clean, FUN = mean)
ggplot(survival_rates, aes(x = factor(parch), y = survived)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Anzahl der Eltern/Kinder an Bord", y = "Überlebensrate", title = "Korrelation zwischen Eltern/Kinder und Überlebensstatus")
plot_§
plot_3
# Überlebensraten berechnen
survival_rates <- aggregate(survived ~ parch, data = data_3_clean, FUN = mean)
ggplot(survival_rates, aes(x = factor(parch), y = survived)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Anzahl der Eltern/Kinder an Bord", y = "Überlebensrate", title = "Korrelation zwischen Eltern/Kinder und Überlebensstatus")
plot_5
plot_2
data_3 <- ggplot(survival_rates, aes(x = factor(parch), y = survived)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Anzahl der Eltern/Kinder an Bord", y = "Überlebensrate", title = "Korrelation zwischen Eltern/Kinder und Überlebensstatus")
rm(data_3_clean)
plot_3
plot_4
# Verknüpfung der beiden Tabellen
combined_data <- merge(data_4_clean)
# Verknüpfung der beiden Tabellen
combined_data <- merge(data_4_clean$pclass, data_4_clean$survived)
# Mosaikplot erstellen
ggplot(combined_data, aes(x = as.factor(Passagierklasse), fill = as.factor(Überlebenschance))) +
geom_bar(position = "fill", width = 0.9) +
labs(x = "Passagierklasse", y = "Anteil", fill = "Überlebenschance", title = "Korrelation zwischen Überlebenschance und Passagierklasse") +
scale_fill_manual(values = c("steelblue", "orange")) +
theme_minimal()
# Verknüpfung der beiden Tabellen
combined_data <- merge(data_4_clean$pclass, data_4_clean$survived)
# Mosaikplot erstellen
ggplot(combined_data, aes(x = as.factor(data_4_clean$pclass), fill = as.factor(data_4_clean$survived))) +
geom_bar(position = "fill", width = 0.9) +
labs(x = "Passagierklasse", y = "Anteil", fill = "Überlebenschance", title = "Korrelation zwischen Überlebenschance und Passagierklasse") +
scale_fill_manual(values = c("steelblue", "orange")) +
theme_minimal()
rlang::last_trace()
# Verknüpfung der beiden Tabellen
combined_data <- merge(data_4_clean)
library(ggplot2)
# Verknüpfung der beiden Data Frames
combined_data <- merge(data_4_clean, by = "gemeinsameSpalte")
library(ggplot2)
# Verknüpfung der beiden Data Frames
combined_data <- merge(data_4_clean$pclass, data_4_clean$survived)
>>>>>>> 2b4e0d217b616e8fc3a78da8cd5469443f6b5144
# Häufigkeitstabelle erstellen
freq_table <- table(combined_data$pclass, combined_data$survived)
# Mosaikplot erstellen
ggplot(as.data.frame(freq_table), aes(x = Var1, y = Freq, fill = Var2)) +
geom_tile(width = 0.9, height = 0.9) +
labs(x = "Passagierklasse", y = "Häufigkeit", fill = "Überlebenschance", title = "Korrelation zwischen Überlebenschance und Passagierklasse") +
scale_fill_manual(values = c("steelblue", "orange")) +
theme_minimal()
library(ggplot2)
# Verknüpfung der beiden Data Frames
combined_data <- merge(data_4_clean$pclass, data_4_clean$survived)
# Häufigkeitstabelle erstellen
freq_table <- table(combined_data$pclass, combined_data$survived)
# Mosaikplot erstellen
ggplot(as.data.frame(freq_table), aes(x = , y = Freq, fill = Var2)) +
geom_tile(width = 0.9, height = 0.9) +
labs(x = "Passagierklasse", y = "Häufigkeit", fill = "Überlebenschance", title = "Korrelation zwischen Überlebenschance und Passagierklasse") +
scale_fill_manual(values = c("steelblue", "orange")) +
theme_minimal()
library(ggplot2)
# Verknüpfung der beiden Data Frames
combined_data <- merge(data_4_clean, by = "gemeinsameSpalte")
library(ggplot2)
# Annahme: Du hast zwei separate Data Frames namens "df1" und "df2" mit den entsprechenden Daten.
# Kombinieren der Data Frames basierend auf einer gemeinsamen Spalte
combined_data <- merge(data_4_clean$pclass, data_4_clean$survived, by = "GemeinsameSpalte")
library(ggplot2)
# Annahme: Du hast zwei separate Data Frames namens "df1" und "df2" mit den entsprechenden Daten.
# Kombinieren der Data Frames basierend auf einer gemeinsamen Spalte
combined_data <- merge(data_4_clean$pclass, data_4_clean$survived, by.x = "GemeinsameSpalte",by.y = "GemeinsameSpalte")
shiny::runApp('C:/Users/Alexa/Desktop/Wirtschaftsinformatik/4_Semester/statistik/CovidStatistikHausarbeit/CovidStatistikHausarbeit')
plot_6
plot_3
plot_4
data_3_clean
data_4_clean
data_4 <- data.frame(pclass,survived)
data_4_clean <- na.omit(data_4)
data_4_clean
table(data_4_clean)
addmargins(table(data_4_clean))
data_4_table <- table(data_4_clean)
data_4_mosaicplot <- mosaicplot(data_4_table)
runApp('C:/Users/Alexa/Desktop/Wirtschaftsinformatik/4_Semester/statistik/CovidStatistikHausarbeit/CovidStatistikHausarbeit')
rm(combined_data)
data_4_mosaicplot <- mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht")
data_4_mosaicplot <- mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht",main="Mosaicplot")
data_4_mosaicplot
data_4 <- data.frame(pclass,survived)
data_4_clean <- na.omit(data_4)
table(data_4_clean)
addmargins(table(data_4_clean))
data_4_mosaicplot <- mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht",main="Mosaicplot")
data_4_mosaicplot
data_4 <- data.frame(pclass,survived)
data_4_clean <- na.omit(data_4)
data_4_table <- table(data_4_clean)
addmargins(table(data_4_clean))
data_4_mosaicplot <- mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht",main="Mosaicplot")
data_4_mosaicplot
rm(freq_table)
data_4_table
data_4 <- data.frame(pclass,survived)
data_4_clean <- na.omit(data_4)
data_4_table <- table(data_4_clean)
addmargins(table(data_4_clean))
data_4_mosaicplot <- mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht",main="Mosaicplot")
data_4_mosaicplot
rm(data_4_mosaicplot)
plot_$
plot_4
plot_4
data_4_mosaicplot <- mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht",main="Mosaicplot")
plot_5
plot_6
data_4_mosaicplot <- fortify(mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht",main="Mosaicplot"))
View(data_4_mosaicplot)
data_4_mosaicplot
View(data_4_mosaicplot)
data_4_mosaicplot
data_4_mosaicplot
View(data_4_mosaicplot)
View(data_4_mosaicplot)
data_4_mosaicplot <- mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht",main="Mosaicplot")
plot_4 <- mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht",main="Mosaicplot")
plot_4
library(vcd)
plot_4
plot_4 <- mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht",main="Mosaicplot")
plot_4
plot_4
mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht",main="Mosaicplot")
mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht",main="Mosaicplot")
rm(data_4_mosaicplot)
rm(plot_4)
data_6
plot_6
plot_1
plot_1
data_1 <- data.frame(survived, age)
data_1
data_1$survived <- factor(data_1$survived, labels = c("Nein", "Ja"))
data_1$survived
data_1$age_group <- cut(data_1$age, breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 10), include.lowest = TRUE, labels = FALSE)
data_1$age_group
'options(max.print = 1000)'
plot_1 <- ggplot(data_1, aes(x = factor(age_group), fill = survived)) +
geom_bar(position = "dodge", width = 0.7) +
scale_x_discrete(labels = paste0(seq(0, max(data_1$age, na.rm = TRUE), by = 10), "-", seq(9, max(data_1$age, na.rm = TRUE), by = 10))) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Häufigkeit des Überlebensstatus nach Alter")
print(plot_1)
data_1 <- data.frame(survived, age)
data_1
data_1$survived <- factor(data_1$survived, labels = c("Nein", "Ja"))
data_1$survived
data_1$age_group <- cut(data_1$age, breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 10), include.lowest = TRUE, labels = FALSE)
data_1$age_group
'options(max.print = 1000)'
plot_1 <- ggplot(data_1, aes(x = factor(age_group), fill = survived)) +
geom_bar(position = "dodge", width = 0.7) +
scale_x_discrete(labels = paste0(seq(0, max(data_1$age, na.rm = TRUE), by = 10), "-", seq(9, max(data_1$age, na.rm = TRUE), by = 10))) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht")
print(plot_1)
plot_2
plot_3
survival_rates <- aggregate(survived ~ parch, data = data_3_clean, FUN = mean)
data_3_clean <- na.omit(data_3)
survival_rates <- aggregate(survived ~ parch, data = data_3_clean, FUN = mean)
data_3_clean <- na.omit(data_3)
survival_rates <- aggregate(survived ~ parch, data = data_3, FUN = mean)
plot_3
rm(plot_3)
data_3_clean <- na.omit(data_3)
survival_rates <- aggregate(survived ~ parch, data = data_3_clean, FUN = mean)
data_3_clean <- na.omit(data_3)
survival_rates <- aggregate(survived ~ parch, data = data_3_clean, FUN = mean)
data_3_clean
data_3_clean
data_3
data_3_clean
survival_rates <- aggregate(survived ~ parch, data = data_3_clean, FUN = mean)
data_3_clean
data_3_clean
data_3_clean
plot_4
mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht",main="Mosaicplot")
plot_5
plot_6
survival_rates <- aggregate(survived ~ parch, data = data_3_clean, FUN = mean)ggplot(survival_rates, aes(x = factor(parch), y = survived)) +
survival_rates <- aggregate(survived ~ parch, data = data_3_clean, FUN = mean)
survival_rates <- aggregate(survived ~ parch, data = data_3_clean, FUN = mean)
data_3 <- data.frame(survived,parch)
data_3_clean <- na.omit(data_3)
survival_rates <- aggregate(survived ~ parch, data = data_3_clean, FUN = mean)
plot_3 <- ggplot(survival_rates, aes(x = factor(parch), y = survived)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Anzahl der Eltern/Kinder an Bord", y = "Überlebensrate", title = "Korrelation zwischen Eltern/Kinder und Überlebensstatus")
plot_3
plot_1
plot_2
plot_3
plot_4
mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht",main="Mosaicplot")
plot_5
plot_6
mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht",main="Mosaicplot")
plot_1
plot_2
plot_3
mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht",main="Mosaicplot")
plot_5
plot_6
data_6 <- data.frame(sibsp,survived)
data_6_clean <- na.omit(data_6)
data_6_table <- table(data_4_clean)
addmargins <- (table(data_4_clean))
data_4 <- data.frame(pclass,survived)
data_4_clean <- na.omit(data_4)
data_4_table <- addmargins(table(data_4_clean))
mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht",main="Mosaicplot")
data_4 <- data.frame(pclass,survived)
data_4_clean <- na.omit(data_4)
data_4_table <- table(data_4_clean)
addmargins(table(data_4_clean))
mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht",main="Mosaicplot")
data_4 <- data.frame(pclass,survived)
data_4_clean <- na.omit(data_4)
data_4_table <- table(data_4_clean)
#addmargins(table(data_4_clean))
mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht",main="Mosaicplot")
data_4 <- data.frame(pclass,survived)
data_4_clean <- na.omit(data_4)
data_4_table <- table(data_4_clean)
plot_4 <- mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht",main="Mosaicplot")
rm(plot_4)
data_6_table
mosaicplot(data_6_table,xlab = "Geschwister/Ehepartner", ylab ="Überlebt oder nicht",main="Mosaicplot")
data_6_table <- table(data_6_clean)
mosaicplot(data_6_table,xlab = "Geschwister/Ehepartner", ylab ="Überlebt oder nicht",main="Mosaicplot")
mosaicplot(data_6_table,xlab = "Geschwister/Ehepartner", ylab ="Überlebt oder nicht",main="Mosaicplot")
<<<<<<< HEAD
plot_1
plot_
plot_
plot_2
plot_3
plot_4
data_4_table
mosaicplot(data_4_table,xlab = "Passagierklasse", ylab ="Überlebt oder nicht",main="Mosaicplot")
plot_5
plot_6
mosaicplot(data_6_table,xlab = "Geschwister/Ehepartner", ylab ="Überlebt oder nicht",main="Mosaicplot")
shiny::runApp()
plot_1
output$distPlot1 <- renderPlot({
x <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)
hist(x, breaks = bins, col = 'darkgray', border = 'white',
xlab = 'Waiting time to next eruption (in mins)',
main = 'Histogram of waiting times')
})
runApp()
plot_1 <- ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 10, position = "dodge", color = "black", fill = "steelblue") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 10), labels = paste0(seq(0, max(data_1$age, na.rm = TRUE), by = 10), "-", seq(9, max(data_1$age, na.rm = TRUE), by = 10))) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht")
library(ggplot2)
plot_1 <- ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 10, position = "dodge", color = "black", fill = "steelblue") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 10), labels = paste0(seq(0, max(data_1$age, na.rm = TRUE), by = 10), "-", seq(9, max(data_1$age, na.rm = TRUE), by = 10))) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht")
print(plot_1)
plot_!
plot_1
plot_1 <- ggplot(data_1, aes(x = factor(age_group), fill = survived)) +
geom_bar(position = "dodge", width = 0.7) +
scale_x_discrete(labels = paste0(seq(0, max(data_1$age, na.rm = TRUE), by = 10), "-", seq(9, max(data_1$age, na.rm = TRUE), by = 10))) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht")
print(plot_1)
plot_1 <- ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 10, position = "dodge", color = "black", fill = "steelblue") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 10), labels = paste0(seq(0, max(data_1$age, na.rm = TRUE), by = 10), "-", seq(9, max(data_1$age, na.rm = TRUE), by = 10))) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht") +
scale_fill_manual(values = c("orange", "steelblue"), labels = c("Nicht-Überlebt", "Überlebt")) +
guides(fill = guide_legend(title = "Überlebensstatus"))
print(plot_1)
plot_1 <- ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 10, position = "dodge", color = "black", fill = "steelblue") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 10), labels = paste0(seq(0, max(data_1$age, na.rm = TRUE), by = 10), "-", seq(9, max(data_1$age, na.rm = TRUE), by = 10))) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht") +
scale_fill_manual(values = c("orange", "steelblue"), labels = c("Nicht-Überlebt", "Überlebt")) +
guides(fill = guide_legend(title = "Überlebensstatus"))
print(plot_1)
plot_1 <- ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 10, position = "dodge", color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 10), labels = paste0(seq(0, max(data_1$age, na.rm = TRUE), by = 10), "-", seq(9, max(data_1$age, na.rm = TRUE), by = 10))) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht") +
scale_fill_manual(values = c("orange", "steelblue"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
print(plot_1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
plot_1
plot_1 <- ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 10, position = "dodge", color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 10), labels = paste0(seq(0, max(data_1$age, na.rm = TRUE), by = 10), "-", seq(9, max(data_1$age, na.rm = TRUE), by = 10))) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
plot_1 <- ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 10, position = "dodge", color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 10), labels = paste0(seq(0, max(data_1$age, na.rm = TRUE), by = 10), "-", seq(9, max(data_1$age, na.rm = TRUE), by = 10))) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
plot_1
runApp()
runApp()
ggplot(df, aes(x = age, y = survived)) +
geom_point() +
labs(x = "Alter", y = "Überlebensstatus") +
ggtitle("Scatterplot von Alter und Überlebensstatus")
ggplot(data_1, aes(x = age, y = survived)) +
geom_point() +
labs(x = "Alter", y = "Überlebensstatus") +
ggtitle("Scatterplot von Alter und Überlebensstatus")
ggplot(data_1, aes(x = age, y = survived)) +
geom_point() +
scale_x_continuous(breaks = seq(min(df$age), max(df$age), by = 1)) +
labs(x = "Alter", y = "Überlebensstatus") +
ggtitle("Scatterplot von Alter und Überlebensstatus")
ggplot(data_1, aes(x = age, y = survived)) +
geom_point() +
scale_x_continuous(breaks = seq(min(data_1$age), max(data_1$age), by = 1)) +
labs(x = "Alter", y = "Überlebensstatus") +
ggtitle("Scatterplot von Alter und Überlebensstatus")
data_1_clean <- na.omit(data_1)
ggplot(data_1, aes(x = age, y = survived)) +
geom_point() +
scale_x_continuous(breaks = seq(min(data_1_clean$age), max(data_1_clean$age), by = 1)) +
labs(x = "Alter", y = "Überlebensstatus") +
ggtitle("Scatterplot von Alter und Überlebensstatus")
ggplot(data_1, aes(x = age, y = survived)) +
geom_point() +
scale_x_continuous(breaks = seq(min(data_1_clean$age), max(data_1_clean$age), by = 5)) +
labs(x = "Alter", y = "Überlebensstatus") +
ggtitle("Scatterplot von Alter und Überlebensstatus")
ggplot(data_1_clean, aes(x = round(age), y = survived)) +
geom_point() +
scale_x_continuous(breaks = seq(min(data_1_clean$age), max(data_1_clean$age), by = 1)) +
labs(x = "Alter", y = "Überlebensstatus") +
ggtitle("Scatterplot von Alter und Überlebensstatus")
ggplot(data_1_clean, aes(x = round(age), y = survived)) +
geom_point() +
scale_x_continuous(breaks = seq(min(data_1_clean$age), max(data_1_clean$age), by = 5)) +
labs(x = "Alter", y = "Überlebensstatus") +
ggtitle("Scatterplot von Alter und Überlebensstatus")
data$group <- ifelse(data$survived == 1, "ja", "nein")
data$group <- ifelse(titanic_data$survived == 1, "ja", "nein")
rm(data)
data$group <- ifelse(survived == 1, "ja", "nein")
rm(data)
group <- ifelse(survived == 1, "ja", "nein")
group
survived_status_group <- ifelse(survived == 1, "ja", "nein")
runApp()
runApp('C:/Users/Alexa/Desktop/Wirtschaftsinformatik/4_Semester/statistik/CovidStatistikHausarbeit/CovidStatistikHausarbeit')
plot_1
runApp()
runApp()
runApp()
runApp()
plot_1
ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 10, color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 10), labels = paste0(seq(0, max(data_1$age, na.rm = TRUE), by = 10), "-", seq(9, max(data_1$age, na.rm = TRUE), by = 10))) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 10, position = "dodge", color = "black") +
# scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 10), labels = paste0(seq(0, max(data_1$age, na.rm = TRUE), by = 10), "-", seq(9, max(data_1$age, na.rm = TRUE), by = 10))) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = input$bin_input, position = "dodge", color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 5),
labels = seq(0, max(data_1$age, na.rm = TRUE), by = 5)) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Alter), die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 10, position = "dodge", color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 5),
labels = seq(0, max(data_1$age, na.rm = TRUE), by = 5)) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Alter), die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
plot_1 <- ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 10, position = "dodge", color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 5),
labels = seq(0, max(data_1$age, na.rm = TRUE), by = 5)) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Alter), die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
plot_1
ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 10, color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 10), labels = paste0(seq(0, max(data_1$age, na.rm = TRUE), by = 10), "-", seq(9, max(data_1$age, na.rm = TRUE), by = 10))) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 10, color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 10), labels = paste0(seq(0, max(data_1$age, na.rm = TRUE), by = 10), "-", seq(9, max(data_1$age, na.rm = TRUE), by = 10))) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
plot_1
ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 10, color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 10), labels = paste0(seq(0, max(data_1$age, na.rm = TRUE), by = 10), "-", seq(9, max(data_1$age, na.rm = TRUE), by = 10))) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
runApp()
runApp()
ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 10, color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 10), labels = paste0(seq(0, max(data_1$age, na.rm = TRUE), by = 10), "-", seq(9, max(data_1$age, na.rm = TRUE), by = 10))) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 10, color = "black") +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 1, color = "black") +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 5, color = "black") +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 5, color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 5),
labels = seq(0, max(data_1$age, na.rm = TRUE), by = 5)) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 5, color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 1),
labels = seq(0, max(data_1$age, na.rm = TRUE), by = 1)) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 1, color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 1),
labels = seq(0, max(data_1$age, na.rm = TRUE), by = 1)) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
runApp()
runApp()
ggplot(data_1, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 1, color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 1),
labels = seq(0, max(data_1$age, na.rm = TRUE), by = 1)) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
ggplot(data_1_clean, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 1, color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 1),
labels = seq(0, max(data_1$age, na.rm = TRUE), by = 1)) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
plot_1 <- ggplot(data_1_clean, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = 1, color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 1),
labels = seq(0, max(data_1$age, na.rm = TRUE), by = 1)) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Personen (je nach Altersgruppe), die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
plot_1
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data_survived_alive <- titanic$survived == 1
data_survived_alive <- titanic_data$survived == 1
data_survived_alive <- survived == 1
data_survived_alive
data_survived_dead <- survived == 0
data_survived_dead
runApp()
runApp()
data_1
survived
runApp()
survived_true <- data.frame(survived == 1)
runApp()
survived_list_true <- list(survived_true = survived_true)
runApp()
survived_false <- data.frame(survived == 0)
survived_list_false <- list(survived_false = survived_false)
runApp()
survived_list_true
rm(survived_false,survived_true, survived_list_false,survived_list_true )
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
=======
library(shiny)
library(shiny)
library(ggplot2)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
selectInput("survived_input", "Überlebensstatus:",
choices = c("Alle", "Überlebt", "Nicht-Überlebt")),
sliderInput("bin_input", "Bin-Breite:", min = 1, max = 10, value = 1)
),
mainPanel(
plotOutput("histogram")
)
)
)
server <- function(input, output) {
output$histogram <- renderPlot({
filtered_data <- switch(input$survived_input,
"Alle" = data_1,
"Überlebt" = data_1[data_1$survived == "Ja", ],
"Nicht-Überlebt" = data_1[data_1$survived == "Nein", ])
ggplot(filtered_data, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = input$bin_input, color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 1),
labels = seq(0, max(data_1$age, na.rm = TRUE), by = 1)) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Anzahl der Personen, die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
})
}
shinyApp(ui, server)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
selectInput("survived_input", "Überlebensstatus:",
choices = c("Alle", "Überlebt", "Nicht-Überlebt")),
sliderInput("bin_input", "Bin-Breite:", min = 1, max = 10, value = 1)
),
mainPanel(
plotOutput("histogram")
)
)
)
server <- function(input, output) {
output$histogram <- renderPlot({
filtered_data <- switch(input$survived_input,
"Alle" = data_1,
"Überlebt" = data_1[data_1$survived == "Ja", ],
"Nicht-Überlebt" = data_1[data_1$survived == "Nein", ])
ggplot(filtered_data, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = input$bin_input, color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 1),
labels = seq(0, max(data_1$age, na.rm = TRUE), by = 1)) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Anzahl der Personen, die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green","red"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
})
}
shinyApp(ui, server)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
selectInput("survived_input", "Überlebensstatus:",
choices = c("Alle", "Überlebt", "Nicht-Überlebt")),
sliderInput("bin_input", "Bin-Breite:", min = 1, max = 10, value = 1)
),
mainPanel(
plotOutput("histogram")
)
)
)
server <- function(input, output) {
output$histogram <- renderPlot({
filtered_data <- switch(input$survived_input,
"Alle" = data_1,
"Überlebt" = data_1[data_1$survived == "Ja", ],
"Nicht-Überlebt" = data_1[data_1$survived == "Nein", ])
ggplot(filtered_data, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = input$bin_input, color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 1),
labels = seq(0, max(data_1$age, na.rm = TRUE), by = 1)) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Anzahl der Personen, die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green","blue"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
})
}
shinyApp(ui, server)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
selectInput("survived_input", "Überlebensstatus:",
choices = c("Alle", "Überlebt", "Nicht-Überlebt")),
sliderInput("bin_input", "Bin-Breite:", min = 1, max = 10, value = 1)
),
mainPanel(
plotOutput("histogram")
)
)
)
server <- function(input, output) {
output$histogram <- renderPlot({
filtered_data <- switch(input$survived_input,
"Alle" = data_1,
"Überlebt" = data_1[data_1$survived == "Ja", ],
"Nicht-Überlebt" = data_1[data_1$survived == "Nein", ])
ggplot(filtered_data, aes(x = age, fill = factor(survived))) +
geom_histogram(binwidth = input$bin_input, color = "black") +
scale_x_continuous(breaks = seq(0, max(data_1$age, na.rm = TRUE), by = 1),
labels = seq(0, max(data_1$age, na.rm = TRUE), by = 1)) +
labs(x = "Alter", y = "Anzahl", fill = "Überlebensstatus") +
ggtitle("Aufteilung der Anzahl der Personen, die überlebt haben oder nicht") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt"), name = "Überlebensstatus")
})
}
shinyApp(ui, server)
>>>>>>> 2b4e0d217b616e8fc3a78da8cd5469443f6b5144
