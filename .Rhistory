xlab = "Geschwister/Ehepartner",
ylab = "Überlebt/nicht Überlebt",
main = "Verteilung der Überlebenschance auf die Anzahl der Geschwister/Ehepaare",
color = c("red", "green"),
labeling = labeling_values(format = "%0.2f%%"))
library(vcd)
library(vcdExtra)
library(mosaic)
mosaicplot(data_6_table,
xlab = "Geschwister/Ehepartner",
ylab = "Überlebt/nicht Überlebt",
main = "Verteilung der Überlebensschance auf die Anzahl der Geschwister/Ehepaare",
color = c("red", "green"),
labeling_args = list(label = label(prop.table(data_6_table) * 100, format = "%0.2f%%")))
library(ggmosaic)
install.packages("ggmosaic")
library(ggplot2)
library(ggmosaic)
# Umwandlung des Tabellenformats in ein geeignetes Format für ggplot2
data_6_table_plot <- as.data.frame(data_6_table)
data_6_table_plot$sibsp <- factor(data_6_table_plot$sibsp)
data_6_table_plot$survived <- factor(data_6_table_plot$survived)
# Berechnung der relativen Häufigkeiten
data_6_table_prop <- prop.table(data_6_table, margin = 1) * 100
# Erstellung des Mosaicplots mit Text
ggplot(data_6_table_plot) +
geom_mosaic(aes(x = product(factor(sibsp), factor(survived)),
fill = factor(survived),
weight = Freq)) +
geom_text(aes(x = product(factor(sibsp), factor(survived)),
label = paste0(Freq, "%")),
color = "black",
size = 3) +
scale_fill_manual(values = c("red", "green")) +
labs(x = "Geschwister/Ehepartner",
y = "Überlebt/nicht Überlebt",
fill = "Überlebt") +
ggtitle("Verteilung der Überlebenschance auf die Anzahl der Geschwister/Ehepaare") +
theme_minimal()
library(ggplot2)
library(ggmosaic)
# Umwandlung des Tabellenformats in ein geeignetes Format für ggplot2
data_6_table_plot <- as.data.frame(data_6_table)
data_6_table_plot$sibsp <- factor(data_6_table_plot$sibsp)
data_6_table_plot$survived <- factor(data_6_table_plot$survived)
# Berechnung der relativen Häufigkeiten
data_6_table_prop <- prop.table(data_6_table, margin = 1) * 100
# Erstellung des Mosaicplots mit Text
ggplot(data_6_table_plot) +
geom_mosaic(aes(x = product(factor(sibsp), factor(survived)),
fill = factor(survived),
weight = Freq)) +
geom_text(aes(x = product(factor(sibsp), factor(survived)),
y = cumsum(Freq) - (Freq / 2),
label = paste0(Freq, "%")),
color = "black",
size = 3) +
scale_fill_manual(values = c("red", "green")) +
labs(x = "Geschwister/Ehepartner",
y = "Überlebt/nicht Überlebt",
fill = "Überlebt") +
ggtitle("Verteilung der Überlebenschance auf die Anzahl der Geschwister/Ehepaare") +
theme_minimal()
rm(data_6_table_plot)
runApp()
runApp()
data_6_table_prop
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
data_5_table_prop
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
data_7 <- data.frame(pclass, sex == "male", survived == 1)
data_7
rm(data_8)
rm(data_7)
fare
plot(fare)
plot(fare,pclass)
embarked
plot(embarked,survived)
plot(embarked)
group
rm(group)
ticket
survived_status_group
source("C:/Users/Alexa/Desktop/Wirtschaftsinformatik/4_Semester/statistik/hausarbeit_statistik/statistik_projekt/explorer.R", echo=TRUE)
runApp()
cabin
fate
fare
plot(fare,pclass)
barplot(fare)
barplot(pclass)
barplot(fate)
barplot(fare)
barplot(y = fare, sum(fare))
barplot(embarked)
sibsp
runApp()
data_1_rel_hauf
data_4_table_prop
data_1 <- data.frame(age,survived)
runApp()
rm(data_1_clean)
data_4_table
data_1_table <- table(survived,age)
data_1_table
data_1_table <- table(age,survived)
data_1_table
data_1_Erwachsene
data_1_rel_hauf
data_1_rel_hauf_age
data_1_table
data_1_rel_hauf
runApp()
data_1_rel_hauf
data_1_table
data_1_Erwachsene
data_1_rel_hauf
age_breaks
age_label
age_labels
runApp()
data_1_rel_hauf
age_breaks
age_breaks <- c(0,12,17,24,36,48,64)
age_labesl
age_labels
age_labels <- c("Kinder (0-12 Jahre)", "Jugendliche (13-17 Jahre)", "junge Erwachsene (18-24 Jahre", "Erwachsene mittleren Alters (25-36)", "Erwachsene gehobenen Alters (37-48 Jahre)", "Erwachsene höheren Alters (49-64 Jahre)", "Senioren (65+ Jahre)")
age_labels
age_breaks
shiny::runApp()
# Daten für das Beispiel
age_labels <- c("Kinder (0-12 Jahre)", "Jugendliche (13-17 Jahre)", "junge Erwachsene (18-24 Jahre)",
"Erwachsene mittleren Alters (25-36)", "Erwachsene gehobenen Alters (37-48 Jahre)",
"Erwachsene höheren Alters (49-64 Jahre)", "Senioren (65+ Jahre)")
# Datenrahmen erstellen
data_frame <- data.frame(age_labels, survived)
library(ggplot2)
# Relative Häufigkeiten berechnen
counts <- table(age_labels, survived)
data_1_Erwachsene
plot(data_1_Erwachsene)
barplot(data_1_Erwachsene)
age_labels
age_breaks
age
survived
runApp()
data_3_table_prop
age_breaks
age_labels
age_groups <- cut(age, breaks = age_breaks, labels = age_labels, right = FALSE)
age_groups <- cut(age, breaks = age_breaks, labels = age_labels, right = FALSE)
age_breaks <- c(0, 12, 17, 24, 36, 48, 64, Inf)
age_groups <- cut(age, breaks = age_breaks, labels = age_labels, right = FALSE)
data <- data.frame(age = age_groups, survived = survived)
freq_table <- table(data)
rel_freq <- prop.table(freq_table, margin = 1) * 100
rel_freq
data_1_frame <- as.data.frame(rel_freq)
data_1_frame
ggplot(data_1_frame, aes(x = parch, y = Freq, fill = survived)) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste0(round(Freq, 1), "%")), size = 3.5, color = "white") +
labs(x = "Anzahl der Eltern/Kinder", y = "Prozentuale Verteilung", fill = "Überlebt oder nicht") +
ggtitle("Verteilung der Eltern/Kinder und deren Überlebenschance") +
theme_minimal()
ggplot(data_1_frame, aes(x = age, y = Freq, fill = survived)) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste0(round(Freq, 1), "%")), size = 3.5, color = "white") +
labs(x = "Anzahl der Eltern/Kinder", y = "Prozentuale Verteilung", fill = "Überlebt oder nicht") +
ggtitle("Verteilung der Eltern/Kinder und deren Überlebenschance") +
theme_minimal()
runApp()
data_1_rel_hauf <- data_1_frame
runApp()
else if (choice_age == "Relative Häufigkeit") {
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data.frame(pclass,sex, survived)
sex_female <- sex %>% filter(sex == "female")
library(dplyr)
sex_female <- sex %>% filter(sex == "female")
sex_female <- filter(sex == "female")
sex_female <- filter(sex,sex == "female")
sex_female <- filter(sex,sex == "female")
sex_female <- sex %>% filter(sex == "female")
sex_female <- sex %>% filter(sex == get("female"))
sex
sex_female <- sex %>% filter(sex == get("female"))
sex_female <- sex %>% filter("female")
sex_female <- sex %>% filter(get("female"))
sex_female <- sex %>% filter(get("female"))
sex_female <- filter(sex,sex == "female")
sex %>%
filter(sex == "female")
sex_female <- sex %>%
filter(sex == "female")
sex_female <- sex %>%
filter(sex == 'female')
sex_female <- sex %>%
filter(sex == female)
sex %>% filter(str_detect("female"))
sex %>% ungroup %>% filter(sex == "female")
sex_frame <- as.data.frame(sex)
sex_female <- filter(sex_frame, sex == "female")
sex_female
sex_male <- filter(sex_frame, sex == "male")
data_2_clean_drill_down_1
survived_frame <- as.data.frame(survived)
pclass_frame <- as.data.frame(pclass)
data <- data.frame(sex_male, pclass, survived)
# Erstellen eines Dataframes mit den gegebenen Daten
data <- data.frame(sex_male, pclass, survived)
data <- data.frame (filter(sex_frame == "male"), survived, pclass)
data <- data.frame (sex_frame,survived,pclass_frame)
ggplot(data, aes(x = pclass, y = survived, color = sex_frame)) +
geom_point() +
labs(x = "Passagierklasse", y = "Überlebensstatus", color = "Geschlecht") +
ggtitle("Scatterplot: Passagierklasse vs. Überlebensstatus mit Geschlecht")
ggplot(data, aes(x = pclass, y = survived, fill = sex_frame)) +
geom_point() +
labs(x = "Passagierklasse", y = "Überlebensstatus", color = "Geschlecht") +
ggtitle("Scatterplot: Passagierklasse vs. Überlebensstatus mit Geschlecht")
ggplot(data, aes(x = pclass, y = survived, color = sex_frame)) +
geom_point() +
labs(x = "Passagierklasse", y = "Überlebensstatus", color = "Geschlecht") +
ggtitle("Scatterplot: Passagierklasse vs. Überlebensstatus mit Geschlecht")
ggplot(data, aes(x = factor(pclass), y = survived, color = sex_frame)) +
geom_point() +
labs(x = "Passagierklasse", y = "Überlebensstatus", color = "Geschlecht") +
ggtitle("Scatterplot: Passagierklasse vs. Überlebensstatus mit Geschlecht")
ggplot(data, aes(x = factor(pclass), y = survived, color = sex_frame)) +
geom_point() +
labs(x = "Passagierklasse", y = "Überlebensstatus", color = "Geschlecht") +
ggtitle("Scatterplot: Passagierklasse vs. Überlebensstatus mit Geschlecht")
ggplot(data, aes(x = factor(pclass), y = factor(survived), color = sex_frame)) +
geom_point() +
labs(x = "Passagierklasse", y = "Überlebensstatus", color = "Geschlecht") +
ggtitle("Scatterplot: Passagierklasse vs. Überlebensstatus mit Geschlecht")
pclass_frame <- as.data.frame(factor(pclass))
pclass_frame
survived_frame <- as.data.frame(factor(survived))
survived_frame
data <- data.frame(sex_frame, survived_frame, pclass_frame)
ggplot(data, aes(x = pclass, y = survived, color = sex_frame)) +
geom_point() +
labs(x = "Passagierklasse", y = "Überlebensstatus", color = "Geschlecht") +
ggtitle("Scatterplot: Passagierklasse vs. Überlebensstatus mit Geschlecht")
runApp()
runApp()
data <- subset (data, pclass == 1)
data
ggplot(data, aes(x = pclass, fill = sex_frame)) +
geom_bar() +
labs(x = "Passagierklasse", y = "Anzahl", fill = "Geschlecht") +
ggtitle("Barplot: Überlebensstatus nach Geschlecht in Passagierklasse 1")
data <- subset (data, pclass == 1 & sex_frame == "male")
data
data <- subset (data, pclass == 1)
data
data <- data.frame(sex_male, survived_frame, pclass_frame)
data <- data.frame(sex_frame, survived_frame, pclass_frame)
data
data <- subset (data, pclass == 1)
ggplot(data, aes(x = pclass, fill = sex_frame)) +
geom_bar() +
labs(x = "Passagierklasse", y = "Anzahl", fill = "Geschlecht") +
ggtitle("Barplot: Überlebensstatus nach Geschlecht in Passagierklasse 1")
sex_colors <- c("male" = "blue", "female" = "pink")
ggplot(data, aes(x = pclass, fill = sex_frame)) +
geom_bar() +
scale_fill_manual(values = sex_colors) +
labs(x = "Passagierklasse", y = "Anzahl", fill = "Geschlecht") +
ggtitle("Barplot: Überlebensstatus nach Geschlecht in Passagierklasse 1")
ggplot(data, aes(x = factor(pclass), fill = sex_frame)) +
geom_bar() +
scale_fill_manual(values = sex_colors) +
labs(x = "Passagierklasse", y = "Anzahl", fill = "Geschlecht") +
ggtitle("Barplot: Überlebensstatus nach Geschlecht in Passagierklasse 1")
ggplot(data, aes(x = pclass_frame, fill = sex_frame)) +
geom_bar() +
scale_fill_manual(values = sex_colors) +
labs(x = "Passagierklasse", y = "Anzahl", fill = "Geschlecht") +
ggtitle("Barplot: Überlebensstatus nach Geschlecht in Passagierklasse 1")
ggplot(data, aes(x = factor(pclass_frame), fill = sex_frame)) +
geom_bar() +
scale_fill_manual(values = sex_colors) +
labs(x = "Passagierklasse", y = "Anzahl", fill = "Geschlecht") +
ggtitle("Barplot: Überlebensstatus nach Geschlecht in Passagierklasse 1")
data
ggplot(data, aes(x = factor.pclass., fill = sex_frame)) +
geom_bar() +
scale_fill_manual(values = sex_colors) +
labs(x = "Passagierklasse", y = "Anzahl", fill = "Geschlecht") +
ggtitle("Barplot: Überlebensstatus nach Geschlecht in Passagierklasse 1")
ggplot(data, aes(x = factor.pclass., fill = factor.sex.)) +
geom_bar() +
scale_fill_manual(values = sex_colors) +
labs(x = "Passagierklasse", y = "Anzahl", fill = "Geschlecht") +
ggtitle("Barplot: Überlebensstatus nach Geschlecht in Passagierklasse 1")
ggplot(data, aes(x = factor.pclass., fill = factor.sex)) +
geom_bar() +
scale_fill_manual(values = sex_colors) +
labs(x = "Passagierklasse", y = "Anzahl", fill = "Geschlecht") +
ggtitle("Barplot: Überlebensstatus nach Geschlecht in Passagierklasse 1")
data
ggplot(data, aes(x = factor.pclass., fill = sex)) +
geom_bar() +
scale_fill_manual(values = sex_colors) +
labs(x = "Passagierklasse", y = "Anzahl", fill = "Geschlecht") +
ggtitle("Barplot: Überlebensstatus nach Geschlecht in Passagierklasse 1")
data
data <- data.frame(sex_frame, survived_frame, pclass_frame)
data
data_female_1 <- subset(data, sex == "female" & pclass == 1)
sum_female_survived_1 <- sum(data_female_1$survived == 1)
rm(sum_female_survived_1)
table_female_1 <- table(data_female_1$factor.survived.)
table_female_1
prop.table(table_female_1)
data_female_1 <- subset(data, pclass == 1)
data_1_pclass_1 <- subset(data, pclass == 1)
rm(data_female_1)
table_pclass_1 <- table(data_1_pclass_1)
table_pclass_1
table_pclass_1
table_pclass_1 <- table(data_1_pclass_1$factor.pclass.)
table_pclass_1
data_1_pclass_1
table_pclass_1 <- table(data_1_pclass_1)
table_pclass_1
survived_frame <- as.data.frame(survived)
pclass_frame <- as.data.frame(pclass)
data <- data.frame(sex_frame,pclass_frame,survived_frame)
data_1_pclass_1 <- subset(data, pclass == 1)
data_1_pclass_1
table_pclass_1 <- table(data_1_pclass_1)
table_pclass_1
prop.table(table_pclass_1)
data
pclass_frame_1 <- subset(pclass_frame, pclass == !)
pclass_frame_1 <- subset(pclass_frame, pclass == 1)
pclass_frame_2 <- subset(pclass_frame, pclass == 2)
pclass_frame_3 <- subset(pclass_frame, pclass == 3)
data_1_pclass_1 <- data.frame(sex_frame,pclass_frame_1, survived_frame)
rm(pclass_frame_1, pclass_frame_2, pclass_frame_3)
runApp()
pclass_frame
data
subset(data_1, pclass == 1)
shiny::runApp()
data_1_pclass_1
plot(data_1_pclass_1)
barplot(data_1_pclass_1)
pclass_1_table <- table(data_1_pclass_1)
pclass_1_table
rm(pclass_1_table)
table(data_1_pclass_1$sex,data_1_pclass_1$survived)
table_pclass_1 <- table(data_1_pclass_1$sex,data_1_pclass_1$survived)
ggplot(table_pclass_1, aes(x = sex, y = survived, fill = sex)) +
geom_bar(stat = "identity") +
labs(x = "Geschlecht", y = "Relative Häufigkeit", fill = "Geschlecht") +
ggtitle("Relative Häufigkeit der Überlebenschance nach Geschlecht")
data_1_pclass_1<-as.data.frame(table_pclass_1)
data_1_pclass_1
ggplot(data_1_pclass_1, aes(x = sex, y = survived, fill = sex)) +
geom_bar(stat = "identity") +
labs(x = "Geschlecht", y = "Relative Häufigkeit", fill = "Geschlecht") +
ggtitle("Relative Häufigkeit der Überlebenschance nach Geschlecht")
ggplot(data_1_pclass_1, aes(x = Var1, y = Var2, fill = sex)) +
geom_bar(stat = "identity") +
labs(x = "Geschlecht", y = "Relative Häufigkeit", fill = "Geschlecht") +
ggtitle("Relative Häufigkeit der Überlebenschance nach Geschlecht")
ggplot(data_1_pclass_1, aes(x = Var1, y = Var2, fill = Freq)) +
geom_bar(stat = "identity") +
labs(x = "Geschlecht", y = "Relative Häufigkeit", fill = "Geschlecht") +
ggtitle("Relative Häufigkeit der Überlebenschance nach Geschlecht")
data_1_pclass_1
data_5_table_prop
table_pclass_1
prop.table(table_pclass_1)
prop.table(table_pclass_1, margin = 1) * 100
table_pclass_1_prop <- prop.table(table_pclass_1, margin = 1) * 100
as.data.frame(table_pclass_1_prop)
data_1_pclass_1 <- as.data.frame(table_pclass_1_prop)
ggplot(data_1_pclass_1, aes(x = Var1, y = Var2, fill = Freq)) +
geom_bar(stat = "identity") +
labs(x = "Geschlecht", y = "Relative Häufigkeit", fill = "Geschlecht") +
ggtitle("Relative Häufigkeit der Überlebenschance nach Geschlecht")
ggplot(data_1_pclass_1, aes(x = Var1, y = Freq, fill = survived)) +
geom_bar(stat = "identity") +
labs(x = "Geschlecht", y = "Relative Häufigkeit", fill = "Geschlecht") +
ggtitle("Relative Häufigkeit der Überlebenschance nach Geschlecht")
ggplot(data_1_pclass_1, aes(x = Var1, y = Freq, fill = factor(survived))) +
geom_bar(stat = "identity") +
labs(x = "Geschlecht", y = "Relative Häufigkeit", fill = "Geschlecht") +
ggtitle("Relative Häufigkeit der Überlebenschance nach Geschlecht")
ggplot(data_1_pclass_1, aes(x = Var1, y = survived, fill = sex)) +
geom_bar(stat = "identity") +
labs(x = "Geschlecht", y = "Relative Häufigkeit", fill = "Geschlecht") +
ggtitle("Relative Häufigkeit der Überlebenschance nach Geschlecht")
ggplot(data_1_pclass_1, aes(x = Var1, y = Var2, fill = Freq)) +
geom_bar(stat = "identity") +
labs(x = "Geschlecht", y = "Relative Häufigkeit", fill = "Geschlecht") +
ggtitle("Relative Häufigkeit der Überlebenschance nach Geschlecht")
data_5_table_prop
ggplot(table_pclass_1_prop, aes(x = Var1, y = Var2, fill = survived)) +
geom_bar(stat = "identity") +
labs(x = "Geschlecht", y = "Relative Häufigkeit", fill = "Geschlecht") +
ggtitle("Relative Häufigkeit der Überlebenschance nach Geschlecht")
ggplot(data_1_pclass_1, aes(x = Var1, y = Freq, fill = Var2)) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste0(round(Freq, 1), "%")), size = 6, color = "white") +
labs(x = "Geschlecht", y = "Prozentuale Verteilung", fill = "Überlebt oder nicht") +
ggtitle("Einfluss des Geschlechts auf die Überlebenschance") +
theme_minimal()
runApp()
runApp()
data
data_1_pclass_2 <- subset(data, pclass == 2)
data_1_pclass_2
table_pclass_2 <- table(data_1_pclass_2$sex, data_1_pclass_2$survived)
table_pclass_2_prop <- prop.table(table_pclass_2, margin = 1) * 100
data_1_pclass_2 <- as.data.frame(table_pclass_2_prop)
data_1_pclass_2
ggplot(data_1_pclass_2, aes(x = Var1, y = Freq, fill = Var2)) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste0(round(Freq, 1), "%")), size = 6, color = "white") +
labs(x = "Geschlecht", y = "Prozentuale Verteilung", fill = "Überlebt oder nicht") +
ggtitle("Einfluss des Geschlechts auf die Überlebenschance in der 1ten Klasse") +
theme_minimal()
data_1_pclass_3 <- subset(data, pclass == 3)
data_1_pclass_3
data_1_pclass_3 <- table(data_1_pclass_2$sex, data_1_pclass_2$survived)
data_1_pclass_3 <- subset(data, pclass == 3)
table_pclass_3 <- table(data_1_pclass_3$sex, data_1_pclass_3$survived)
table_pclass_3_prop <- prop.table(table_pclass_3, margin = 1) * 100
data_1_pclass_3 <- as.data.frame(table_pclass_3_prop)
data_1_pclass_3
runApp()
runApp()
runApp()
runApp()
runApp()
fare
runApp()
shiny::runApp()
data_1_clean <- na.omit(data_1)
runApp()
fare
fare_survived <- data.frame(fare,survived)
fare_survived
fare_survived_pclass <- data.frame(fare,survived,pclass)
ggplot(fare_survived_pclass, aes(x = fare, y = factor(pclass), fill = factor(survived))) +
geom_point() +
labs(x = "Fare", y = "Pclass", fill = "Survived") +
ggtitle("Scatterplot: Fare vs. Pclass mit Survived") +
theme_minimal()
ggplot(fare_survived_pclass, aes(x = fare, y = factor(pclass), fill = factor(survived))) +
geom_point() +
labs(x = "Fare", y = "Pclass", fill = "Survived") +
ggtitle("Scatterplot: Fare vs. Pclass mit Survived") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt")) +
theme_minimal()
fare_survived_age <- data.frame(fare,survived,age)
ggplot(fare_survived_age, aes(x = fare, y = age, fill = factor(survived))) +
geom_point() +
labs(x = "Fare", y = "age", fill = "Survived") +
ggtitle("Scatterplot: Fare vs. Pclass mit Survived") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt")) +
theme_minimal()
ggplot(fare_survived_age, aes(x = fare, y = factor(age), fill = factor(survived))) +
geom_point() +
labs(x = "Fare", y = "age", fill = "Survived") +
ggtitle("Scatterplot: Fare vs. Pclass mit Survived") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt")) +
theme_minimal()
ggplot(fare_survived_age, aes(x = fare, y = age, fill = factor(survived))) +
geom_point() +
labs(x = "Fare", y = "age", fill = "Survived") +
ggtitle("Scatterplot: Fare vs. Pclass mit Survived") +
scale_fill_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt")) +
theme_minimal()
ggplot(fare_survived_age, aes(x = age, y = fare, color = factor(survived))) +
geom_point() +
labs(x = "Alter", y = "Fare", color = "Survived") +
ggtitle("Scatterplot: Alter vs. Fare mit Survived") +
scale_color_manual(values = c("red", "green"), labels = c("Nicht-Überlebt", "Überlebt")) +
theme_minimal()
